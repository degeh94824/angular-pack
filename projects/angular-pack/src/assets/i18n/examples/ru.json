{
  "app.examples.search.placeholder": "Поиск по имени",
  "app.examples.table.pagination": "Изменить пагинацию",
  "app.examples.table.title": "Таблица",
  "app.examples.table.description": "Применив объект DataSource, таблица будет использовать поток Observable, предоставляемый функцией connect, и запускать обновления, когда этот поток генерирует новые значения массива данных. Во время ngOnDestroy таблицы или когда источник данных удаляется из таблицы, таблица будет вызывать функцию disconnect DataSource (может быть полезно для очистки любых подписок, зарегистрированных во время процесса соединения).",
  "app.examples.crud.add": "Добавить книгу",
  "app.examples.crud.cancel": "Отмена",
  "app.examples.crud.empty": "Нет ни одной книги, давайте добавим!",
  "app.examples.crud.error": "обязательно",
  "app.examples.crud.new": "Создать новую",
  "app.examples.crud.placeholder0": "Id",
  "app.examples.crud.placeholder1": "Заголовок",
  "app.examples.crud.placeholder2": "Автор",
  "app.examples.crud.placeholder3": "Описание",
  "app.examples.crud.save": "Сохранить",
  "app.examples.crud.subtitle1": "Твоя книга",
  "app.examples.crud.subtitle2": "Редактировать книгу",
  "app.examples.crud.text": "В этом редакторе можно управлять книгами, добавлять, обновлять, удалять и выбирать с помощью",
  "app.examples.crud.title": "CRUD операции с помощью @ngrx/entity & @ngrx/router-store",
  "app.examples.crud.tooltip.delete": "Удаление книги",
  "app.examples.crud.tooltip.deselect": "Отменить выбор книги",
  "app.examples.crud.tooltip.edit": "Редактировать",
  "app.examples.form.autosave": "Автосохранение",
  "app.examples.form.error1": "обязательно",
  "app.examples.form.error2": "должно быть валидным",
  "app.examples.form.error3": "должно быть длинее чем",
  "app.examples.form.error4": "должно быть меньше чем",
  "app.examples.form.placeholder1": "Имя",
  "app.examples.form.placeholder2": "Пароль",
  "app.examples.form.placeholder3": "Ваш E-mail",
  "app.examples.form.placeholder4": "Описание",
  "app.examples.form.placeholder5": "День Рождения",
  "app.examples.form.reset": "Сброс",
  "app.examples.form.save": "Сохранить",
  "app.examples.form.send": "Отправить",
  "app.examples.form.subtitle1": "Форма",
  "app.examples.form.subtitle2": "Маркетинговая информация",
  "app.examples.form.text1": "Заказать подарок.",
  "app.examples.form.text2": "Оцените эту форму:",
  "app.examples.form.text3": "Вы должны запросить подарок, чтобы увидеть больше информации.",
  "app.examples.form.text4": "Подарок отправлен!",
  "app.examples.form.text5": "Подарок не отправлен.",
  "app.examples.form.text6": "Хлопок",
  "app.examples.form.title": "Reactive form с использованием form builder",
  "app.examples.overlay.description1": "для создания мощных компонентов. ",
  "app.examples.overlay.description2": "Пример этого показывает сервис всплывающих окон, который предоставляет API, который позволяет нам открывать всплывающие окна относительно любого исходного элемента, отображать в нем пользовательский компонент, шаблон или простой текст и получать уведомления о его закрытии.",
  "app.examples.overlay.popover": "Popover",
  "app.examples.overlay.placeholder": "Выберите тип",
  "app.examples.overlay.close": "Закрыть",
  "app.examples.overlay.template.text": "И вот какой-то удивительный контент. Это взято из темплейта",
  "app.examples.overlay.component.text": "И вот какой-то удивительный контент. Это взято из компонента",
  "app.examples.menu.table": "Таблица",
  "app.examples.menu.crud": "CRUD операции",
  "app.examples.menu.form": "Форма",
  "app.examples.menu.notifications": "Уведомления",
  "app.examples.menu.theming": "Тема Офрмления",
  "app.examples.menu.todos": "Задачи",
  "app.examples.menu.overlay": "Overlay",
  "app.examples.menu.simple-state-management": "Простое управление состоянием",
  "app.examples.notifications.default.description": "Уведомления по умолчанию для событий низкой важности",
  "app.examples.notifications.default.title": "Уведомления по умолчанию",
  "app.examples.notifications.error.description": "Уведомления об ошибках, когда что-то пошло не так...",
  "app.examples.notifications.error.title": "Уведомления об ошибке",
  "app.examples.notifications.info.description": "Информационные уведомления о событиях средней важности",
  "app.examples.notifications.info.title": "Информационные уведомления",
  "app.examples.notifications.success.description": "Уведомления об успешном завершении для сообщения об успешном завершении операции или действия",
  "app.examples.notifications.success.title": "Успешные уведомления",
  "app.examples.notifications.title": "Уведомления",
  "app.examples.notifications.warning.description": "Предупреждающие уведомления о событиях, требующих внимания пользователя",
  "app.examples.notifications.warning.title": "Предупреждающие уведомления",
  "app.examples.simple-state-management.title": "Простое управление состоянием",
  "app.examples.simple-state-management.text1": "NgRx - это отличная библиотека управления состоянием, но иногда может оказаться излишним использование ее в более простых приложениях с ограниченными потребностями маршрутизации или совместного использования состояний.",
  "app.examples.simple-state-management.text2": "В этих случаях мы обычно достигаем решения, включающего RxJs BehaviorSubject, который позволяет совместно использовать наше состояние в качестве наблюдаемого потока, а также позволяет службе императивно извлекать и изменять состояние субъектов императивно...",
  "app.examples.simple-state-management.text3": "Этот шаблон был обернут и сделан более удобным для",
  "app.examples.simple-state-management.text4": "это простое управление состоянием с минималистичным API, односторонним потоком данных, поддержкой нескольких моделей и неизменными данными, предоставляемыми как RxJS Observable",
  "app.examples.simple-state-management.text5": "Узнайте больше в",
  "app.examples.simple-state-management.text6": "Официальная документация",
  "app.examples.simple-state-management.text7": "Вы также можете добавить его в свой проект, используя",
  "app.examples.simple-state-management.form.add.title": "Добавить нового пользователя",
  "app.examples.simple-state-management.form.add.submit": "Добавить",
  "app.examples.simple-state-management.form.edit.title": "Изменить существующего пользователя",
  "app.examples.simple-state-management.form.edit.submit": "Изменить",
  "app.examples.simple-state-management.form.reset": "Сброс",
  "app.examples.simple-state-management.username": "Имя пользователя",
  "app.examples.simple-state-management.name": "Имя",
  "app.examples.simple-state-management.surname": "Фамилия",
  "app.examples.simple-state-management.validator.required": "Пожалуйста, укажите значение",
  "app.examples.simple-state-management.validator.minlength": "Пожалуйста, предоставьте не менее  {{minlength}} символов",
  "app.examples.theming.child.description": "child работает!",
  "app.examples.theming.child.subtitle": "должно быть без стиля",
  "app.examples.theming.child.title": "childs h1",
  "app.examples.theming.parent.description": "parent работает!",
  "app.examples.theming.parent.text1": "Стили тем не импортируются в компонентах в свойстве",
  "app.examples.theming.parent.text10": "в правилах CSS для повышения их специфики. Например, посмотрим на файл темы оформления этого компонента:",
  "app.examples.theming.parent.text2": "декоратора",
  "app.examples.theming.parent.text3": "а импортируются в основном файле",
  "app.examples.theming.parent.text4": ". Из-за этого стили темы",
  "app.examples.theming.parent.text5": "Не",
  "app.examples.theming.parent.text6": "привязаны к компоненту автоматически.",
  "app.examples.theming.parent.text7": "Мы должны использовать",
  "app.examples.theming.parent.text8": "конкретный",
  "app.examples.theming.parent.text9": "селекторы для предотвращения утечки стилей в дочерние компоненты. Это может быть достигнуто с помощью",
  "app.examples.theming.parent.title": "Область темы с вложенными компонентами",
  "app.examples.title": "Примеры",
  "app.examples.todos.added.notification": "{{name}} добавлен",
  "app.examples.todos.example": "Пример задачи",
  "app.examples.todos.filter.active": "Активно",
  "app.examples.todos.filter.all": "Все",
  "app.examples.todos.filter.description": "Отображено",
  "app.examples.todos.filter.done": "Завершено",
  "app.examples.todos.filter.item": "задача",
  "app.examples.todos.filter.items": "задачи",
  "app.examples.todos.filter.none": "нисколько",
  "app.examples.todos.filter.notification": "Отфильтровано по",
  "app.examples.todos.filter.one": "один",
  "app.examples.todos.input": "Я собираюсь...",
  "app.examples.todos.list": "Список задач",
  "app.examples.todos.remove.notification": "Удалены готовые задачи",
  "app.examples.todos.text1": "Это классика",
  "app.examples.todos.text2": "задачи",
  "app.examples.todos.text3": "пример с поддержкой добавления, переключения, удаления и фильтрации элементов задачи.",
  "app.examples.todos.text4": "Обработка состояний осуществляется с использованием",
  "app.examples.todos.text5": "модуль и поддержка lazy loaded reducers (это лениво загруженный feature module).",
  "app.examples.todos.text6": "Задачи сохраняются в локальном хранилище, поэтому вы должны видеть ваши задачи также при последующих посещениях при использовании того же браузера.",
  "app.examples.todos.toggle.notification": "Переключено {{name}} на",
  "app.examples.todos.tooltip.add": "Добавить новую задачу",
  "app.examples.todos.tooltip.remove": "Удалить готовые задачи",
  "app.examples.todos.undo": "Вернуть"
}
